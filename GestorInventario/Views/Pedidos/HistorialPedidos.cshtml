@using GestorInventario.PaginacionLogica
@model List<HistorialPedido>

<h1>Historial de Pedidos</h1>
@{
    //Hace referencia al ViewData creado en el controlador como ViewData["Paginas"] se ha llamado
    //Paginas el ViewData el ViewBag.Paginas espera algo que se llame paginas porque es a por lo que
    //va a ir cuando se ejecute y decimos que este ViewBag.Paginas es una lista de PaginasModel
    var paginas = ViewBag.Paginas as List<PaginasModel>;
}
<a href="@Url.Action("DescargarHistorialPDF", "Pedidos")" target="_blank" class="btn btn-primary descargar">Descargar Historial PDF</a>
<form asp-action="DeleteAllHistorial" asp-controller="Pedidos" method="post">
    <input type="submit" value="Eliminar todo el historial" class="btn btn-danger mt-2" />
</form>
<form asp-controller="Pedidos" asp-action="HistorialPedidos">
    <p>
        Buscar: <input type="text" name="buscar" class="form-text" />
        <input type="submit" value="Buscar" class="btn btn-sm btn-dark" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>Número de Pedido</th>
            <th>Fecha de Pedido</th>
            <th>Estado de Pedido</th>
            <th>Productos</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pedido in Model)
        {
            <tr>
                <td>@pedido.NumeroPedido</td>
                <td>@pedido.FechaPedido</td>
                <td>@pedido.EstadoPedido</td>
                <td>
                    @foreach (var detalle in pedido.DetalleHistorialPedidos)
                    {
                        <span>@detalle.Producto.NombreProducto</span>
                        <br />
                    }
                </td>
                <td>
                    <a asp-action="DetallesHistorialPedido" asp-route-id="@pedido.Id" class="btn btn-info">Ver detalles</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <!--Como paginas es una lista se puede iterar pues se itera obteniendo todas las paginas-->
        @foreach (var pagina in paginas)
        {
            <!--
                Creamos un elemento de lista (<li>) para cada página
                Si la página está habilitada, no añadimos ninguna clase adicional
                Si la página no está habilitada, añadimos la clase "disabled"
                Si la página está activa, añadimos la clase "active"

            -->
            <li class="page-item @(pagina.Habilitada ? null :"disabled") @(pagina.Activa ? "active":null)">
                <!--

                    Creamos un enlace (<a>) para cada página
                     El enlace lleva a la acción "Index" del controlador actual con el número de la página como parámetro
                     El texto del enlace es el texto de la página
                -->
                <a class="page-link" href="@Url.Action("HistorialPedidos", new { Pagina = pagina.Pagina, buscar=ViewData["Buscar"]  })">@pagina.Texto</a>
            </li>
        }
    </ul>
</nav>


