@using GestorInventario.PaginacionLogica
@model List<Producto>
<!-- Tabla para mostrar los proveedores existentes -->
<h1>Productos</h1>
<p>
    <a asp-action="Create" class="btn btn-info">Crear Producto</a>

</p>
@{
    //Hace referencia al ViewData creado en el controlador como ViewData["Paginas"] se ha llamado
    //Paginas el ViewData el ViewBag.Paginas espera algo que se llame paginas porque es a por lo que
    //va a ir cuando se ejecute y decimos que este ViewBag.Paginas es una lista de PaginasModel
    var paginas = ViewBag.Paginas as List<PaginasModel>;
}
@* Este código renderiza una vista parcial en ASP.NET.

La función Html.RenderPartial se utiliza para renderizar una vista parcial.
El primer argumento, "_CreatePartial", es el nombre de la vista parcial que se va a renderizar.
El segundo argumento, new ProveedorViewModel(), es el modelo que se pasa a la vista parcial.

Cuando este código se ejecuta, ASP.NET renderiza la vista parcial "_CreatePartial" y le pasa un nuevo objeto
ProveedorViewModel como modelo.
Esto significa que cualquier lugar en tu vista donde veas este código, ASP.NET renderizará la vista parcial
"_CreatePartial" en su lugar.

Las vistas parciales son útiles para reutilizar bloques de código que se repiten en varias vistas.
En lugar de duplicar ese código en cada vista, puedes ponerlo en una vista parcial y luego referenciar esa
vista parcial en las vistas que necesitan ese bloque de código.
 *@
@* @{
    Html.RenderPartial("_CreatePartial", new ProveedorViewModel());
} *@
<div class="alert alert-primary" role="alert">
 El precio de todos los productos no se especifica hasta que no estas en el carrito le das a <strong>Checkout</strong> y paypal te calcula
 cuanto es el total.
</div>

<div class="container my-4">
    <div class="row">
        <div class="col-md-12">
            <h2>Filtros de Búsqueda</h2>
            <form asp-controller="Productos" asp-action="Index" method="get" class="row g-3">
                <div class="col-md-4">
                    <input type="text" name="buscar" class="form-control" placeholder="Introduzca el nombre del producto">
                </div>
                <div class="col-md-3">
                    <select name="ordenarPorPrecio" class="form-select">
                        <option value="">Ordenar por precio...</option>
                        <option value="asc">Menor a mayor</option>
                        <option value="desc">Mayor a menor</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select name="idProveedor" class="form-select">
                        <option value="">Todos los proveedores</option>
                        @foreach (var proveedor in ViewBag.Proveedores as SelectList)
                        {
                            <option value="@proveedor.Value">@proveedor.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Buscar</button>
                </div>
            </form>
            <form asp-controller="Productos" asp-action="Index" method="get" class="mt-3">
                <button type="submit" class="btn btn-outline-secondary w-100">Limpiar Filtros</button>
            </form>
        </div>
    </div>
</div>
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-warning">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    @foreach (var producto in Model)
    {
        <div class="col-md-4 mb-3">
            <div class="card h-100">
                <!-- Asegúrate de que todas las tarjetas tengan la misma altura -->
                <img src="@producto.Imagen" class="card-img-top" alt="Imagen del producto" style="height: 200px; object-fit: cover;">
                <div class="card-body d-flex flex-column">
                    <!-- Flex para organizar el contenido de la tarjeta -->
                    <h5 class="card-title">@producto.NombreProducto</h5>
                    <p class="card-text">@producto.Descripcion</p>
                    <p class="card-text"><small class="text-muted">Cantidad disponible: @producto.Cantidad</small></p>
                    <p class="card-text">@producto.Precio.ToString("C")</p>
                    <p class="card-text"><small class="text-muted">Proveedor: @producto.IdProveedorNavigation.NombreProveedor</small></p>

                    <!-- Botones de acción en la parte inferior de la tarjeta -->
                    <div class="mt-auto">
                        <!-- mt-auto empuja el contenido hacia abajo -->
                        <a href="@Url.Action("Edit", new { id = producto.Id })" class="btn btn-primary w-100 mb-2">Editar</a>
                        <form asp-action="AgregarAlCarrito" method="post" class="mb-2">
                            <input type="hidden" name="idProducto" value="@producto.Id" />
                            <div class="input-group">
                                <input type="number" name="cantidad" class="form-control" min="1" max="@producto.Cantidad" value="1" />
                                <button type="submit" class="btn btn-success"><i class="bi bi-cart"></i>Agregar</button>
                            </div>
                            @if (TempData["ErrorMessage"] != null)
                            {
                                <div class="alert alert-success mt-2">
                                    @TempData["ErrorMessage"]
                                </div>
                            }
                        </form>
                        <a href="@Url.Action("Delete", new { id = producto.Id })" class="btn btn-danger w-100">Eliminar</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @foreach (var pagina in paginas)
        {
            <li class="page-item @(pagina.Habilitada ? "" : "disabled") @(pagina.Activa ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { Pagina = pagina.Pagina, buscar= ViewData["Buscar"], ordenarPrecio=ViewData["OrdenarPorprecio"], idProveedor=ViewData["idProveedor"] })">
                    @if (pagina.Texto == "Anterior")
                    {
                        <span aria-hidden="true">«</span>
                    }
                    else if (pagina.Texto == "Siguiente")
                    {
                        <span aria-hidden="true">»</span>
                    }
                    else
                    {
                        @pagina.Texto
                    }
                </a>
            </li>
        }
    </ul>
</nav>
