   
             
             Número 65537 en Detalle

                    Número Decimal: 65537
                    Número Hexadecimal: 0x10001

                Representación en Bytes

                Para representar 65537 en un array de bytes en formato big endian, donde los bytes más significativos vienen primero:

                    0x10001 en hexadecimal se convierte a bytes:
                        0x01 (1 en decimal)
                        0x00 (0 en decimal)
                        0x01 (1 en decimal)

                Estos bytes se deben almacenar en el array en el orden en que aparecen en el número hexadecimal.
                Array de Bytes Correcto

                En big endian (que es lo habitual para RSA):

                    new byte[] { 0x01, 0x00, 0x01 }
                    O en decimal: new byte[] { 1, 0, 1 }

                Interpretación Incorrecta

                Si interpretas new byte[] { 1, 0, 1 } como un solo número decimal en binario, efectivamente obtienes 101 en binario, 
              que es 5 en decimal. Pero esto es una interpretación errónea del propósito del array de bytes en este contexto.

                Interpretación Correcta

                Cada elemento del array representa un byte del número original. El array new byte[] { 1, 0, 1 } no debe interpretarse como 
                un número combinado sino como una secuencia de bytes:

                    1 (0x01)
                    0 (0x00)
                    1 (0x01)

                Estos bytes, cuando se concatenan correctamente, representan el número 65537 en hexadecimal (0x10001).
                Resumen

                El array new byte[] { 1, 0, 1 } es correcto y representa el exponente 65537 en formato big endian. No se debe interpretar 
               cada byte como un único número en binario, sino como parte de un número mayor en su representación correcta en hexadecimal.
             
            Big Endian

                Los bytes se almacenan en el orden en que se leen.
                Para 0x10001: new byte[] { 0x01, 0x00, 0x01 }

            Little Endian

                Los bytes se almacenan en el orden inverso al que se leen.
                Para 0x10001: new byte[] { 0x01, 0x00, 0x01 } (en este caso es el mismo orden porque los bytes individuales son simétricos)
             